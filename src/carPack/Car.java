package carPack;
/*
*   상속(inheritance)
*   -   객체지향 프로그램 4대 특징 중 하나.
*   -   실세계에서의 상속은 상위 객체의 속성이 하위 객체에 물려져서 하위 객체가 상위 객체의 모든 속성을 가지는 개념
*   -   자바에서의 상속은 자식 클래스가 부모 클래스의 속성을 물려 받고 기능을 추가하여 확장하는 개념
*   -   상속은 슈퍼클래스의 필드와 메서드를 물려 받아서 코드를 재사용 함으로써, 코드 작성에 드는 시간과 비용을 줄일 수 있음.
*   -   기존에 잘 만들어진 클래스를 재사용하여 새로운 클래스를 생성하는 자바 문법
*   -   즞 특정 클래스를 만들 때 기존의 클래스의 데이터(속성)과 기능(메서드)를 물려받아서 중복적인 코드를 방지
*
*   부모 클래스 : Super, parent 클래스 라고 함
*   자식 클래스 : Sub, Child 클래스 라고 함
*   상속의 대상은 멤버(멤버변수, 멤버 메서그)
*   단 생성자나 private 접근 제한을 갖는 멤버변수와 멤버 메서드는 상속에서 제외
*   ==> 즉 상속을 받을 수 있는 클래스는 하나이다. 상속의 장점은 클래스의 수정을 최소화, 유지보수 시간 최소화
*
*   형식: [접근제한자] class 자식클래스면 extends 부모클래스명 {
*       .....
*   }
*   상속 관계 : --는 -- 이다. ==> is a 관계
*   포함 관계 : --는 --를 가지고 있다.
 */
public class Car {
    String name;
    String col;
    int price;

    Car(){}
    Car(String name, String col, int price){
        this.name = name;
        this.col = col;
        this.price = price;
    }
}
